{"version":3,"sources":["components/Addcategory.js","components/GifImage.js","helpers/getGifs.js","components/GifResult.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["Addcategory","addCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","onChange","target","value","type","name","id","GifImage","title","url","className","style","width","margin","border","display","flexDirection","justifyContent","textAlign","fontSize","src","alt","getGifs","categorie","a","URL","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","alert","GifResult","loading","state","setState","useEffect","then","useFetchGifs","flexWrap","App","props","categories","setCategories","cat","newCat","unshift","el","ReactDOM","render","document","getElementById"],"mappings":"2MAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,KADJ,mBAClCC,EADkC,KACtBC,EADsB,KAazC,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,EAAcE,GACdC,EAAc,MAIhB,SACE,uBACEM,SAde,SAACJ,GACpBF,EAAcE,EAAEK,OAAOC,QAcnBA,MAAOT,EACPU,KAAK,OACLC,KAAK,GACLC,GAAG,Q,QCOIC,EA3BE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAWC,GAAU,EAAdH,GAAc,EAAVG,KAC7B,OACE,sBACEC,UAAU,qCACVC,MAAO,CACLC,MAAO,QACPC,OAAQ,OACRC,OAAQ,kBACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,gBARpB,UAWE,oBAAIN,MAAO,CAAEO,UAAW,SAAUC,SAAU,OAAQP,MAAO,OAA3D,SACGJ,IAEH,qBAAKG,MAAO,CAAEC,MAAO,QAAUQ,IAAKX,EAAKY,IAAKb,Q,uBCnBvCc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,yDACyCC,UAC5DH,GAFmB,+DAKII,MAAMF,GALV,cAKbG,EALa,gBAMIA,EAASC,OANb,uBAMXC,EANW,EAMXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACL3B,GAAI2B,EAAI3B,GACRE,MAAOyB,EAAIzB,MACXC,IAAG,UAAEwB,EAAIC,cAAN,aAAE,EAAYC,iBAAiB1B,QAXnB,kBAcZsB,GAdY,kCAgBnBK,MAAM,wBAAD,cAhBc,0DAAH,sDC8BLC,EAzBG,SAAC,GAAmB,IAAjBd,EAAgB,EAAhBA,UAAgB,ECFT,SAACA,GAAe,IAAD,EACf9B,mBAAS,CACjCqC,KAAM,GACNQ,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAezC,OATAC,qBAAU,WACRnB,EAAQC,GAAWmB,MAAK,SAACZ,GAAD,OACtBU,EAAS,CACPV,KAAMA,EACNQ,SAAS,SAGZ,CAACf,IAEGgB,EDZ2BI,CAAapB,GAAjCW,EADqB,EAC3BJ,KAAcQ,EADa,EACbA,QACtB,OACE,gCACE,6BAAKf,IACJe,GAAW,4CACZ,qBACE3B,MAAO,CACLI,QAAS,OACT6B,SAAU,OACV3B,eAAgB,UAJpB,SAOGiB,EAAOF,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA2BA,GAAZA,EAAI3B,aESrBuC,EAzBH,SAACC,GAAW,IAAD,EACerD,mBAAS,CAAC,YADzB,mBACdsD,EADc,KACFC,EADE,KAOrB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaxD,cARC,SAACyD,GACjB,IAAIC,EAAM,YAAOH,GACjBG,EAAOC,QAAQF,GACfD,EAAcE,MAMZ,uBACA,6BACGH,EAAWf,KAAI,SAACoB,GACf,OACE,6BACE,cAAC,EAAD,CAAW7B,UAAW6B,KADfA,YCbrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9d0c8149.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Addcategory = ({ addCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\" \");\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      addCategories(inputValue);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleChange}\r\n        value={inputValue}\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddcategory.propTypes = {\r\n  addCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Addcategory;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GifImage = ({ title, id, url }) => {\r\n  return (\r\n    <div\r\n      className=\" animate__animated animate__fadeIn\"\r\n      style={{\r\n        width: \"300px\",\r\n        margin: \"10px\",\r\n        border: \"2px solid black\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-around\",\r\n      }}\r\n    >\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"15px\", width: \"90%\" }}>\r\n        {title}\r\n      </h1>\r\n      <img style={{ width: \"100%\" }} src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n\r\nGifImage.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifImage;\r\n","export const getGifs = async (categorie) => {\r\n  const URL = `https://api.giphy.com/v1/gifs/search?limit=6&q=${encodeURI(\r\n    categorie\r\n  )}&api_key=ILMyIw8NSK1EvnhctbMglTd5k6XCDXn1`;\r\n  try {\r\n    const response = await fetch(URL);\r\n    const { data } = await response.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs;\r\n  } catch (error) {\r\n    alert(`Un error ha sucedido ${error}`);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GifImage from \"./GifImage\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifResult = ({ categorie }) => {\r\n  const { data: images, loading } = useFetchGifs(categorie);\r\n  return (\r\n    <div>\r\n      <h3>{categorie}</h3>\r\n      {loading && <h1>Loading...</h1>}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {images.map((img) => {\r\n          return <GifImage key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifResult.propTypes = {\r\n  categorie: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifResult;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categorie) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(categorie).then((data) =>\r\n      setState({\r\n        data: data,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [categorie]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Addcategory from \"./components/Addcategory\";\r\nimport GifResult from \"./components/GifResult\";\r\nconst App = (props) => {\r\n  const [categories, setCategories] = useState([\"Vikings\"]);\r\n  const handleAdd = (cat) => {\r\n    let newCat = [...categories];\r\n    newCat.unshift(cat);\r\n    setCategories(newCat);\r\n  };\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <Addcategory addCategories={handleAdd} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((el) => {\r\n          return (\r\n            <li key={el}>\r\n              <GifResult categorie={el} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}